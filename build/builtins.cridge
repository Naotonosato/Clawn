@Ctype String
    @string : __PTR__ __C_CHAR__SIZE_1
    @size : __C_LONGLONG__SIZE_8
@Ctype _List
    @size : __C_LONGLONG__SIZE_8
    @allocated_size : __C_LONGLONG__SIZE_8
    @element_size : __C_LONGLONG__SIZE_8
    @pointer : __PTR__ __C_INT__SIZE_8
@Cfunction get_unique_number
    arguments: 
    return: __C_LONGLONG__SIZE_8
@Cfunction use_heap
    arguments: __C_LONGLONG__SIZE_8
    return: __PTR__ __C_LONGLONG__SIZE_8
@Cfunction register_calling_id
    arguments: 
    return: __C_VOID__
@Cfunction register_calling_id_to_free
    arguments: __C_LONGLONG__SIZE_8
    return: __C_VOID__
@Cfunction free_heaps_associated_calling_id
    arguments: __C_LONGLONG__SIZE_8
    return: __C_VOID__
@Cfunction free_heaps
    arguments: __C_LONGLONG__SIZE_8
    return: __C_VOID__
@Cfunction malloc
    arguments: __C_ULONG__SIZE_8
    return: __PTR__ __C_INT__SIZE_8
@Cfunction memcpy
    arguments: __PTR__ __C_INT__SIZE_8,__PTR__ __C_INT__SIZE_8,__C_ULONG__SIZE_8
    return: __PTR__ __C_INT__SIZE_8
@Cfunction exit
    arguments: __C_INT__SIZE_4
    return: __C_VOID__
@Cfunction printf
    arguments: __PTR__ __C_CHAR__SIZE_1
    return: __C_INT__SIZE_4
@Cfunction snprintf
    arguments: __PTR__ __C_CHAR__SIZE_1,__C_ULONG__SIZE_8,__PTR__ __C_CHAR__SIZE_1
    return: __C_INT__SIZE_4
@Cfunction realloc
    arguments: __PTR__ __C_INT__SIZE_8,__C_ULONG__SIZE_8
    return: __PTR__ __C_INT__SIZE_8
@Cfunction puts
    arguments: __PTR__ __C_CHAR__SIZE_1
    return: __C_INT__SIZE_4
@Cfunction strcat
    arguments: __PTR__ __C_CHAR__SIZE_1,__PTR__ __C_CHAR__SIZE_1
    return: __PTR__ __C_CHAR__SIZE_1
@Cfunction strcmp
    arguments: __PTR__ __C_CHAR__SIZE_1,__PTR__ __C_CHAR__SIZE_1
    return: __C_INT__SIZE_4
@Cfunction clawn_realloc
    arguments: __PTR__ __C_INT__SIZE_8,__C_LONGLONG__SIZE_8,__C_LONGLONG__SIZE_8
    return: __PTR__ __C_INT__SIZE_8
@Cfunction clawn_memcpy
    arguments: __PTR__ __C_INT__SIZE_8,__C_LONGLONG__SIZE_8,__C_LONGLONG__SIZE_8,__PTR__ __C_INT__SIZE_8
    return: __C_VOID__
@Cfunction clawn_index
    arguments: __PTR__ __C_INT__SIZE_8,__C_LONGLONG__SIZE_8,__C_LONGLONG__SIZE_8,__C_LONGLONG__SIZE_8
    return: __PTR__ __C_INT__SIZE_8
@Cfunction clawn_set_element
    arguments: __PTR__ __C_INT__SIZE_8,__C_LONGLONG__SIZE_8,__C_LONGLONG__SIZE_8,__PTR__ __C_INT__SIZE_8,__C_LONGLONG__SIZE_8
    return: __C_VOID__
@Cfunction list_constructor
    arguments: __C_LONGLONG__SIZE_8
    return: __PTR__ _List
@Cfunction append
    arguments: __PTR__ _List,__PTR__ __C_INT__SIZE_8
    return: __C_VOID__
@Cfunction get
    arguments: __PTR__ _List,__C_LONGLONG__SIZE_8
    return: __PTR__ __C_INT__SIZE_8
@Cfunction print
    arguments: __PTR__ String
    return: __C_VOID__
@Cfunction string_constructor
    arguments: __PTR__ __C_CHAR__SIZE_1,__C_LONGLONG__SIZE_8
    return: __PTR__ String
@Cfunction input
    arguments: 
    return: __PTR__ String
@Cfunction get_appended_string
    arguments: __PTR__ String,__PTR__ String
    return: __PTR__ String
@Cfunction to_char_ptr
    arguments: __PTR__ String
    return: __PTR__ __C_CHAR__SIZE_1
@Cfunction append_string
    arguments: __PTR__ String,__PTR__ String
    return: __C_VOID__
@Cfunction int_to_str
    arguments: __C_LONGLONG__SIZE_8
    return: __PTR__ String
@Cfunction float_to_str
    arguments: __C_DOUBLE__SIZE_8
    return: __PTR__ String
@Cfunction to_real_number
    arguments: __C_LONGLONG__SIZE_8
    return: __C_DOUBLE__SIZE_8
@Cfunction to_integer
    arguments: __C_DOUBLE__SIZE_8
    return: __C_LONGLONG__SIZE_8
@Cfunction op_and
    arguments: __C_BOOL__SIZE_1,__C_BOOL__SIZE_1
    return: __C_BOOL__SIZE_1
@Cfunction op_or
    arguments: __C_BOOL__SIZE_1,__C_BOOL__SIZE_1
    return: __C_BOOL__SIZE_1
@Cfunction op_equal_string
    arguments: __PTR__ String,__PTR__ String
    return: __C_BOOL__SIZE_1
@Cfunction add_int
    arguments: __C_LONGLONG__SIZE_8,__C_LONGLONG__SIZE_8
    return: __C_LONGLONG__SIZE_8
@Cfunction sub_int
    arguments: __C_LONGLONG__SIZE_8,__C_LONGLONG__SIZE_8
    return: __C_LONGLONG__SIZE_8
@Cfunction mul_int
    arguments: __C_LONGLONG__SIZE_8,__C_LONGLONG__SIZE_8
    return: __C_LONGLONG__SIZE_8
@Cfunction op_greater_than_int
    arguments: __C_LONGLONG__SIZE_8,__C_LONGLONG__SIZE_8
    return: __C_BOOL__SIZE_1
@Cfunction op_greater_than_or_equal_int
    arguments: __C_LONGLONG__SIZE_8,__C_LONGLONG__SIZE_8
    return: __C_BOOL__SIZE_1
@Cfunction op_less_than_int
    arguments: __C_LONGLONG__SIZE_8,__C_LONGLONG__SIZE_8
    return: __C_BOOL__SIZE_1
@Cfunction op_less_than_or_equal_int
    arguments: __C_LONGLONG__SIZE_8,__C_LONGLONG__SIZE_8
    return: __C_BOOL__SIZE_1
@Cfunction op_equal_int
    arguments: __C_LONGLONG__SIZE_8,__C_LONGLONG__SIZE_8
    return: __C_BOOL__SIZE_1
@Cfunction op_not_equal_int
    arguments: __C_LONGLONG__SIZE_8,__C_LONGLONG__SIZE_8
    return: __C_BOOL__SIZE_1
@Cfunction add_double
    arguments: __C_DOUBLE__SIZE_8,__C_DOUBLE__SIZE_8
    return: __C_DOUBLE__SIZE_8
@Cfunction sub_double
    arguments: __C_DOUBLE__SIZE_8,__C_DOUBLE__SIZE_8
    return: __C_DOUBLE__SIZE_8
@Cfunction mul_double
    arguments: __C_DOUBLE__SIZE_8,__C_DOUBLE__SIZE_8
    return: __C_DOUBLE__SIZE_8
@Cfunction div_double_double
    arguments: __C_DOUBLE__SIZE_8,__C_DOUBLE__SIZE_8
    return: __C_DOUBLE__SIZE_8
@Cfunction div_double_int
    arguments: __C_DOUBLE__SIZE_8,__C_LONGLONG__SIZE_8
    return: __C_DOUBLE__SIZE_8
@Cfunction div_int_double
    arguments: __C_LONGLONG__SIZE_8,__C_DOUBLE__SIZE_8
    return: __C_DOUBLE__SIZE_8
@Cfunction div_int_int
    arguments: __C_LONGLONG__SIZE_8,__C_LONGLONG__SIZE_8
    return: __C_DOUBLE__SIZE_8
@Cfunction op_greater_than_double
    arguments: __C_DOUBLE__SIZE_8,__C_DOUBLE__SIZE_8
    return: __C_BOOL__SIZE_1
@Cfunction op_greater_than_or_equal_double
    arguments: __C_DOUBLE__SIZE_8,__C_DOUBLE__SIZE_8
    return: __C_BOOL__SIZE_1
@Cfunction op_less_than_double
    arguments: __C_DOUBLE__SIZE_8,__C_DOUBLE__SIZE_8
    return: __C_BOOL__SIZE_1
@Cfunction op_less_than_or_equal_double
    arguments: __C_DOUBLE__SIZE_8,__C_DOUBLE__SIZE_8
    return: __C_BOOL__SIZE_1
@Cfunction op_equal_double
    arguments: __C_DOUBLE__SIZE_8,__C_DOUBLE__SIZE_8
    return: __C_BOOL__SIZE_1
@Cfunction op_not_equal_double
    arguments: __C_DOUBLE__SIZE_8,__C_DOUBLE__SIZE_8
    return: __C_BOOL__SIZE_1
